const id = "documentation/components.mdx";
						const collection = "docs";
						const slug = "documentation/components";
						const body = "\nThe following components are available out of the box for use in Markdown.\n\nIf you'd like to build and add your own custom components, see the [Custom Components](#custom-components) section below.\n\n## Built-in Components\n\n### 1. Callout\n\n```mdx\n<Callout type=\" default | warning | danger \">\n\nThis is a default callout. You can embed **Markdown** inside a `callout`.\n\n</Callout>\n```\n<Callout>\n\nThis is a default callout. You can embed **Markdown** inside a `callout`.\n\n</Callout>\n\n<Callout icon=\"💡\" type=\"info\">\n\nThis is a info callout. It uses the props `type=\"info\"`.\n\n</Callout>\n\n<Callout icon=\"⚠️\" type=\"warning\">\n\nThis is a warning callout. It uses the props `type=\"warning\"`.\n\n</Callout>\n\n<Callout  icon=\"🚨\" type=\"danger\">\n\nThis is a danger callout. It uses the props `type=\"danger\"`.\n\n</Callout>\n\n### 2. Card\n\n```mdx\n<Card href=\"#\">\n\n#### Heading\n\nYou can use **markdown** inside cards.\n\n</Card>\n```\n\n<Card href=\"#\">\n\n#### Heading\n\nYou can use **markdown** inside cards.\n\n</Card>\n\nYou can also use HTML to embed cards in a grid.\n\n```mdx\n<div className=\"docs-grid-cols-2\">\n  <Card href=\"#\">\n    #### Card One \n    You can use **markdown** inside cards.\n  </Card>\n\n  <Card href=\"#\">\n    #### Card Two \n    You can also use `inline code` and code blocks.\n  </Card>\n</div>\n```\n\n<div className=\"docs-grid-cols-2\">\n  <Card href=\"#\">\n    #### Card One \n    You can use **markdown** inside cards.\n  </Card>\n\n  <Card href=\"#\">\n    #### Card Two \n    You can also use `inline code` and code blocks.\n  </Card>\n</div>\n\n---\n\n## Custom Components\n\nYou can add your own custom components using the `components` props from `useMDXComponent`.\n\n```ts title=\"components/mdx.tsx\" {2,6}\nimport { Callout } from \"@/components/callout\"\nimport { CustomComponent } from \"@/components/custom\"\n\nconst components = {\n  Callout,\n  CustomComponent,\n}\n\nexport function Mdx({ code }) {\n  const Component = useMDXComponent(code)\n\n  return (\n    <div className=\"mdx\">\n      <Component components={components} />\n    </div>\n  )\n}\n```\n\nOnce you've added your custom component, you can use it in MDX as follows:\n\n```js\n<CustomComponent propName=\"value\" />\n```\n\n---\n\n## HTML Elements\n\nYou can overwrite HTML elements using the same technique above.\n\n```ts {4}\nconst components = {\n  Callout,\n  CustomComponent,\n  hr: ({ ...props }) => <hr className=\"my-4 border-slate-200 md:my-6\" />,\n}\n```\n\nThis will overwrite the `<hr />` tag or `---` in Mardown with the HTML output above.\n\n---\n\n## Styling\n\nTailwind CSS classes can be used inside MDX for styling.\n\n```mdx\n<p className=\"text-red-600\">This text will be red.</p>\n```\n\nMake sure you have configured the path to your content in your `tailwind.config.js` file:\n\n```js title=\"tailwind.config.js\" {6}\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    \"./app/**/*.{ts,tsx}\",\n    \"./components/**/*.{ts,tsx}\",\n    \"./content/**/*.{md,mdx}\",\n  ],\n}\n```\n";
						const data = {title:"Components",description:"Use React components in Markdown using MDX."};
						const _internal = {
							type: 'content',
							filePath: "E:/WEB-DEV/astro-nomy-master/src/content/docs/documentation/components.mdx",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
